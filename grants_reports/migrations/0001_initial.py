# Generated by Django 2.2.2 on 2020-12-03 06:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import grants_reports.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contacts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('grants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TempReport',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('pi', models.IntegerField()),
                ('month', models.IntegerField()),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('grant_id', models.CharField(max_length=50)),
                ('grant_title', models.CharField(max_length=256)),
                ('reporting_period', models.IntegerField()),
                ('accepted_on', models.DateTimeField()),
                ('last_submitted', models.DateTimeField()),
            ],
            options={
                'db_table': 'grant_reports',
                'managed': False,
            },
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('code', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=32)),
                ('order', models.PositiveSmallIntegerField()),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='FirstReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('recruitment_criteria_and_process', models.TextField(null=True)),
                ('recruitment_criteria_and_process_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('project_activities_upload', models.FileField(blank=True, help_text='File size limit: 200KB', max_length=500, null=True, upload_to='')),
                ('planned_activities_upload', models.FileField(blank=True, max_length=500, null=True, upload_to='')),
                ('progress_against_objectives', models.TextField(help_text='Please use 70 words for each objective (max 3 objectives)')),
                ('teamwork_and_mentoring', models.TextField(null=True)),
                ('problems_and_challenges', models.TextField()),
                ('modifications', models.TextField(null=True)),
                ('skills_gap', models.TextField(null=True)),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField()),
                ('month', models.PositiveIntegerField(blank=True, default=6)),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='LastReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('objectives_achieved', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('update_on_objectives', models.TextField(null=True)),
                ('objective_challenges', models.TextField(null=True)),
                ('key_achievements', models.TextField(null=True)),
                ('research_outcomes', models.TextField(null=True)),
                ('significant_individual_change', models.TextField(null=True)),
                ('significant_student_change', models.TextField(null=True)),
                ('benefited_university', models.TextField(null=True)),
                ('benefited_stakeholders', models.TextField(null=True)),
                ('lessons_learned', models.TextField(null=True)),
                ('challenges_encountered_resolved', models.TextField(null=True)),
                ('papers_published', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('student_papers_published', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('won_new_grants', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('new_grant_value', models.IntegerField(blank=True, null=True)),
                ('new_grant_funder', models.TextField(blank=True, null=True)),
                ('recognized_for_outstanding_research', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('invitation_to_continue_working', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('cases_of_uptake', models.TextField(null=True)),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField()),
                ('month', models.PositiveIntegerField(blank=True, default=114, null=True)),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month102Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(blank=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('have_engaged_beneficiaries', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('no_cost_extension_required', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('request_for_funds_for_year2', models.FileField(max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(blank=True, null=True)),
                ('research_to_students_field_attachment', models.TextField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(default=102)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month108Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(blank=True, null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(blank=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('have_engaged_beneficiaries', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_required', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('request_for_funds_for_year2', models.FileField(max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(blank=True, null=True)),
                ('research_to_students_field_attachment', models.TextField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(default=108)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month12Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(null=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('have_engaged_beneficiaries', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_required', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('request_for_funds_for_year2', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(null=True)),
                ('research_to_students_field_attachment', models.TextField(null=True)),
                ('month', models.PositiveIntegerField(blank=True, default=12)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month18Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(null=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('have_engaged_beneficiaries', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('no_cost_extension_required', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('request_for_funds_for_year2', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(null=True)),
                ('research_to_students_field_attachment', models.TextField(null=True)),
                ('month', models.PositiveIntegerField(blank=True, default=18)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month24Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(null=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('have_engaged_beneficiaries', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('no_cost_extension_required', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('request_for_funds_for_year2', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(null=True)),
                ('research_to_students_field_attachment', models.TextField(null=True)),
                ('month', models.PositiveIntegerField(default=24)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month30Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(null=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('have_engaged_beneficiaries', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('no_cost_extension_required', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('request_for_funds_for_year2', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(null=True)),
                ('research_to_students_field_attachment', models.TextField(null=True)),
                ('month', models.PositiveIntegerField(default=30)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month36Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(blank=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('no_cost_extension_required', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('have_engaged_beneficiaries', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('on_schedule', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('request_for_funds_for_year2', models.FileField(max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(blank=True, null=True)),
                ('research_to_students_field_attachment', models.TextField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(default=36)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month42Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(blank=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('have_engaged_beneficiaries', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_required', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('request_for_funds_for_year2', models.FileField(max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(blank=True, null=True)),
                ('research_to_students_field_attachment', models.TextField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(default=42)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month48Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(blank=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('no_cost_extension_required', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('request_for_funds_for_year2', models.FileField(max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('have_engaged_beneficiaries', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(blank=True, null=True)),
                ('research_to_students_field_attachment', models.TextField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(default=48)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month54Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(blank=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('no_cost_extension_required', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('have_engaged_beneficiaries', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('request_for_funds_for_year2', models.FileField(max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(blank=True, null=True)),
                ('research_to_students_field_attachment', models.TextField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(default=54)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month60Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(blank=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('have_engaged_beneficiaries', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_required', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('request_for_funds_for_year2', models.FileField(max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(blank=True, null=True)),
                ('research_to_students_field_attachment', models.TextField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(default=60)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month66Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(blank=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('have_engaged_beneficiaries', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('no_cost_extension_required', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('request_for_funds_for_year2', models.FileField(max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(blank=True, null=True)),
                ('research_to_students_field_attachment', models.TextField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(default=66)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month72Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(blank=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('have_engaged_beneficiaries', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('no_cost_extension_required', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('request_for_funds_for_year2', models.FileField(max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(blank=True, null=True)),
                ('research_to_students_field_attachment', models.TextField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(default=72)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month78Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(blank=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('no_cost_extension_required', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('have_engaged_beneficiaries', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('request_for_funds_for_year2', models.FileField(max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(blank=True, null=True)),
                ('research_to_students_field_attachment', models.TextField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(default=78)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month84Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(blank=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('no_cost_extension_required', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('have_engaged_beneficiaries', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('request_for_funds_for_year2', models.FileField(max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(blank=True, null=True)),
                ('research_to_students_field_attachment', models.TextField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(default=84)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month90Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(blank=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('have_engaged_beneficiaries', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_required', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('request_for_funds_for_year2', models.FileField(max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(blank=True, null=True)),
                ('research_to_students_field_attachment', models.TextField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(default=90)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Month96Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('how_student_objectives_link_to_research_objectives', models.TextField()),
                ('project_progress', models.TextField(null=True)),
                ('student_progress', models.TextField(null=True)),
                ('summary_progress', models.TextField(blank=True)),
                ('linkages_for_next_12_months', models.TextField(blank=True, null=True)),
                ('student_capacity_gaps', models.TextField(null=True)),
                ('teamwork_mentoring', models.TextField(null=True)),
                ('male_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('female_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('how_engaged_beneficiaries', models.IntegerField(blank=True, null=True)),
                ('participants', models.FileField(blank=True, null=True, upload_to='')),
                ('direct_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('indirect_beneficiaries', models.PositiveIntegerField(blank=True, null=True)),
                ('problems_and_challenges', models.TextField(null=True)),
                ('problems_and_challenges_solution', models.TextField(null=True)),
                ('changes_made', models.TextField(blank=True, null=True)),
                ('have_engaged_beneficiaries', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_required', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('no_cost_extension_explained', models.TextField(blank=True, null=True)),
                ('on_schedule', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_on_schedule_explanation', models.TextField(blank=True)),
                ('request_for_funds_for_year2', models.FileField(max_length=300, null=True, upload_to='')),
                ('audited_12_month_financial_report', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('flyers_brochures', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('flyers_brochures_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('policy_briefs', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('policy_briefs_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('accepted_on', models.DateTimeField(blank=True, null=True)),
                ('started', models.IntegerField(null=True)),
                ('linkages_established', models.TextField(null=True)),
                ('ensure_sustainability_strategies', models.TextField(null=True)),
                ('uptake_pathway', models.TextField(null=True)),
                ('unexpected_spillover', models.TextField(null=True)),
                ('field_days_organized', models.IntegerField(blank=True, null=True)),
                ('research_to_students_field_attachment', models.TextField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(default=96)),
                ('any_other_upload', models.FileField(blank=True, null=True, upload_to='')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('beneficary_group', models.ManyToManyField(blank=True, help_text='Check all that are applicable', to='grants_reports.Beneficiary')),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grants.Grant')),
            ],
            bases=(grants_reports.models.ReportMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method_used', models.CharField(max_length=200, null=True)),
                ('description', models.TextField()),
                ('attach_photo_1', models.ImageField(blank=True, null=True, upload_to='')),
                ('attach_photo_2', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.LastReport')),
            ],
        ),
        migrations.CreateModel(
            name='StudentPublication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('Journal', models.CharField(max_length=200, null=True)),
                ('paper', models.FileField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.LastReport')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures96',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month96Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures90',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month90Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures84',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month84Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures78',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month78Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures72',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month72Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures66',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month66Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures60',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month60Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures54',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month54Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures48',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month48Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures42',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month42Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures36',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month36Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures30',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month30Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures24',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month24Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures18',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month18Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures12',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month12Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures108',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month108Report')),
            ],
        ),
        migrations.CreateModel(
            name='RelevantPictures102',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month102Report')),
            ],
        ),
        migrations.CreateModel(
            name='PIPublications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('Journal', models.CharField(max_length=200, null=True)),
                ('paper', models.FileField(blank=True, null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.LastReport')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage96',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month96Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage90',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month90Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage84',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month84Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage78',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month78Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage72',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month72Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage66',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month66Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage60',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month60Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage54',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month54Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage48',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month48Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage42',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month42Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage36',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month36Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage30',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month30Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage24',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month24Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage18',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month18Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage12',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month12Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage108',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month108Report')),
            ],
        ),
        migrations.CreateModel(
            name='Linkage102',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisations', models.TextField(null=True)),
                ('partners', models.TextField(null=True)),
                ('linkage', models.FileField(help_text='Attach document with linkages', null=True, upload_to='')),
                ('grant_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month102Report')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_code', models.CharField(max_length=100, null=True)),
                ('name', models.CharField(max_length=100, null=True)),
                ('year', models.PositiveIntegerField(choices=[(None, '--please select--'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7')], null=True)),
                ('semester', models.PositiveIntegerField(choices=[(None, '--please select--'), (1, '1'), (2, '2')], null=True)),
                ('month_6_report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='grants_reports.FirstReport')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contacts.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Studentmonth96Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_96_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month96Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_96_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth90Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_90_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month90Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_90_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth84Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_84_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month84Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_84_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth78Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_78_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month78Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_78_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth72Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_72_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month72Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_72_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth66Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_66_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month66Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_66_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth60Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_60_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month60Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_60_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth54Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_54_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month54Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_54_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth48Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_48_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month48Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_48_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth42Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_42_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month42Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_42_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth36Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_36_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month36Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_36_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth30Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_30_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month30Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_30_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth24Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_24_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month24Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_24_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth18Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_18_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month18Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_18_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth12Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_12_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month12Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_12_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth108Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_108_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month108Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_108_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Studentmonth102Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('passed_second_courses', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('done_academic_requirements', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('number_of_retakes', models.IntegerField(blank=True, null=True)),
                ('retakes_registration_date', models.DateField(blank=True, null=True)),
                ('defended_proposal', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('defended_proposal_delay_explanation', models.TextField(blank=True)),
                ('research_objectives', models.TextField(blank=True)),
                ('progress_as_planned', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('research_progress', models.TextField(blank=True, null=True)),
                ('thesis_submission_external', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_defense', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('thesis_submission', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('submission_delay_explanation', models.TextField(blank=True, null=True)),
                ('month_102_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.Month102Report')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_102_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='LastStudentReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('student_graduated', models.IntegerField(blank=True, choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('not_graduated_explanation', models.TextField(blank=True, null=True)),
                ('steps_to_graduation', models.TextField(blank=True, null=True)),
                ('expected_graduation_date', models.DateField(blank=True, null=True)),
                ('month_30_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.LastReport')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_30_report', 'student')},
            },
        ),
        migrations.CreateModel(
            name='FirstStudentReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_submitted', models.DateTimeField(blank=True, null=True)),
                ('registered', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('tuition_paid', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('tuition_paid_upload', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('allocated_supervisors', models.IntegerField(choices=[(None, '--please select--'), (2, 'Yes'), (3, 'No')], null=True)),
                ('num_of_courses', models.PositiveIntegerField(null=True)),
                ('month_6_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grants_reports.FirstReport')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Student')),
            ],
            options={
                'unique_together': {('month_6_report', 'student')},
            },
        ),
    ]

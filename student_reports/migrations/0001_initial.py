# Generated by Django 2.2.2 on 2020-12-03 06:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('futureplans_or_feedback', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('innovation_produced', models.TextField()),
                ('publications', models.TextField()),
                ('conference_papers', models.TextField()),
                ('presentations', models.TextField()),
                ('funding_from_other_sources', models.CharField(choices=[(True, 'Yes'), (False, 'No')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='ResearchInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_summary', models.TextField()),
                ('location', models.TextField()),
                ('number_of_stakeholders', models.FloatField(null=True)),
                ('type_of_farming_communities', models.TextField()),
                ('number_of_actors_that_are_non_farmers', models.TextField()),
                ('Your_champion_technology', models.TextField()),
                ('activities_executed', models.TextField()),
                ('scientists_in_your_institution', models.FloatField(null=True)),
                ('technicians_in_your_institution', models.FloatField(null=True)),
                ('fellow_students', models.FloatField(null=True)),
                ('others', models.FloatField(null=True)),
                ('benefits_for_institution', models.TextField()),
                ('critical_issues', models.TextField()),
                ('skills_required', models.TextField()),
                ('challenges_encountered', models.TextField()),
                ('plan_during_the_next_reporting_period', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SkillsImprovement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brief_farm_description', models.TextField()),
                ('short_courses_attended', models.TextField()),
                ('courses_objectives', models.TextField()),
                ('evaluate_the_course_delivery', models.TextField()),
                ('self_evaluation', models.TextField()),
                ('areas_of_improvement', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Studentreport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(choices=[('03', '3 Months'), ('6', '6 Months'), ('9', '9 Months'), ('12', '12 Months'), ('15', '15 Months'), ('18', '18 Months'), ('21', '21 Months')], max_length=3)),
                ('state', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted')], default='draft', max_length=20)),
                ('submitted_on', models.DateField(blank=True, null=True)),
                ('polymorphic_ctype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='contenttypes.ContentType')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SupervisorDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, null=True)),
                ('title', models.CharField(choices=[('mr', 'Mr'), ('mrs', 'Mrs'), ('ms', 'Ms'), ('Dr', 'Dr'), ('Prof', 'Prof')], max_length=25)),
                ('area_of_mentorship', models.CharField(blank=True, max_length=50)),
                ('areas_of_achievement', models.TextField()),
                ('areas_required_more_attention_and_support', models.TextField()),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Otherstudentreport',
            fields=[
                ('studentreport_ptr', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='student_reports.Studentreport')),
                ('accomplishments', models.TextField()),
                ('benefited_count', models.TextField()),
                ('challenges', models.TextField()),
                ('new_technology', models.TextField()),
                ('other_info', models.TextField()),
                ('significant_change', models.TextField()),
                ('skills_use', models.TextField()),
                ('spillovers', models.TextField()),
                ('technology_use', models.TextField()),
                ('trainings', models.TextField()),
                ('workplace', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Publicationattachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='student_reports.Studentreport')),
            ],
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milestone_type', models.CharField(choices=[('rp_written', 'Research Proposal Written'), ('rp_reviewed', 'Research Proposal Reviewed by Supervisor'), ('rp_defended', 'Research Proposal successfully Defended at Department Level'), ('fieldwork_prep', 'Preparations for field research done'), ('fieldwork_done', 'Field Work and Data Collection Done'), ('data_analysed', 'Data Analysis Done'), ('reported', 'Documenting Findings / Reporting Done'), ('activities', 'Activities dissemination done'), ('channels', 'Different dissemination channels used'), ('documented', 'Implementation process documented'), ('papers_written', 'Draft Manuscripts written for peer reviewed journals'), ('papers_submitted', 'Submitted Manuscripts to peer reviewed journals'), ('papers_accepted', 'Manuscripts accepted by peer reviewed journals'), ('posters', 'Posters, fliers, policy briefs, articles submitted in conference proceedings'), ('thesis_written', 'Final Thesis Written'), ('thesis_submitted', 'Thesis submitted for external examination'), ('thesis_corrected', 'Thesis corrected'), ('thesis_defended', 'Thesis Defended'), ('graduated', 'Student graduated')], max_length=20)),
                ('due_date', models.DateField()),
                ('completed', models.CharField(choices=[('no', 'No'), ('yes', 'Yes')], max_length=9)),
                ('comments', models.TextField()),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='milestones', to='student_reports.Studentreport')),
            ],
            options={
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='Mastercardstudentreport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('additional_health_needs', models.TextField()),
                ('address', models.TextField()),
                ('approval_by_program_coordinator', models.CharField(max_length=255)),
                ('area_attention_required', models.TextField()),
                ('area_of_achievement', models.TextField()),
                ('areas_to_improve', models.TextField()),
                ('aware_of_guidance', models.IntegerField()),
                ('business_actors', models.PositiveIntegerField(blank=True, null=True)),
                ('business_challenges', models.TextField()),
                ('business_competition', models.TextField()),
                ('business_future', models.TextField()),
                ('business_growth', models.TextField()),
                ('business_innovation', models.TextField()),
                ('career_areas_more_support', models.TextField()),
                ('career_guidance_qos', models.CharField(max_length=1)),
                ('career_key_issues', models.TextField()),
                ('career_mentor_email', models.CharField(max_length=254)),
                ('career_mentor_name', models.CharField(max_length=255)),
                ('career_mentor_phone', models.CharField(max_length=20)),
                ('contact_at_home_email', models.CharField(max_length=254)),
                ('contact_at_home_name', models.CharField(max_length=255)),
                ('contact_at_home_tel', models.CharField(max_length=20)),
                ('course_unit_code', models.CharField(max_length=255)),
                ('course_units_failed', models.TextField()),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('degree_type', models.CharField(max_length=1)),
                ('email', models.CharField(max_length=254)),
                ('farmers_engaged', models.PositiveIntegerField(blank=True, null=True)),
                ('farming_activities', models.TextField()),
                ('farming_actors', models.TextField()),
                ('farming_communities', models.TextField()),
                ('farming_issues', models.TextField()),
                ('farming_organisations', models.TextField()),
                ('farming_skills_required', models.TextField()),
                ('farming_tech', models.TextField()),
                ('field_location', models.CharField(max_length=255)),
                ('first_name', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=6)),
                ('guidance_attendance_count', models.PositiveIntegerField(blank=True, null=True)),
                ('health_insurance_end', models.DateField(blank=True, null=True)),
                ('health_insurance_number', models.CharField(max_length=255)),
                ('health_insurance_provider', models.CharField(max_length=255)),
                ('health_insurance_qos', models.CharField(max_length=1)),
                ('health_insurance_start', models.DateField(blank=True, null=True)),
                ('last_name', models.CharField(max_length=50)),
                ('middle_names', models.CharField(max_length=255)),
                ('name_of_business', models.CharField(max_length=255)),
                ('name_of_course_unit', models.CharField(max_length=255)),
                ('nationality', models.CharField(max_length=64)),
                ('number_of_credit_units', models.PositiveIntegerField(blank=True, null=True)),
                ('passport_no', models.CharField(max_length=16)),
                ('phone', models.CharField(max_length=20)),
                ('program_title', models.CharField(max_length=255)),
                ('quality_of_teaching', models.CharField(max_length=1)),
                ('semester', models.CharField(max_length=1)),
                ('student_number', models.CharField(max_length=255)),
                ('study_period_end', models.DateField(blank=True, null=True)),
                ('study_period_start', models.DateField(blank=True, null=True)),
                ('supervisor_name', models.CharField(max_length=255)),
                ('supervisor_title', models.CharField(max_length=32)),
                ('timeframe', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=32)),
                ('title_of_research_proposal', models.CharField(max_length=255)),
                ('total_marks_obtained', models.PositiveIntegerField(blank=True, null=True)),
                ('type_of_business', models.CharField(max_length=255)),
                ('type_of_mentor', models.CharField(max_length=255)),
                ('volume_of_business', models.CharField(max_length=255)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('area_of_mentorship', models.CharField(max_length=255)),
                ('studentreport_ptr', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='student_reports.Studentreport')),
            ],
        ),
        migrations.CreateModel(
            name='Mastercardalumnireport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('transition_from_university', models.TextField()),
                ('name_of_employer_institution', models.CharField(max_length=255)),
                ('name_of_studying_institution', models.CharField(max_length=255)),
                ('status_of_enterprise', models.CharField(max_length=20)),
                ('activities_of_enterprise', models.TextField()),
                ('community_initiatives', models.TextField()),
                ('studentreport_ptr', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='student_reports.Studentreport')),
            ],
        ),
        migrations.CreateModel(
            name='Manuscript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_written', 'Not yet written'), ('written', 'Written'), ('submitted', 'Submitted'), ('accepted', 'Accepted'), ('published', 'Published')], max_length=20)),
                ('title', models.TextField()),
                ('journal', models.TextField()),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='student_reports.Studentreport')),
            ],
        ),
        migrations.CreateModel(
            name='Briefsattachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='student_reports.Studentreport')),
            ],
        ),
    ]
